# Hooks:


#1 useState()
const [count, setCount] = useState(0)
const incrementCount = () => {
setCount(count + 1)
}


#2 useEffect()

( api (data fetching), browser api, side effects, interacting with outside world )
executes after every rerender (state changes ... )

addEventListener -> remove listener on willunmountpage  


useEffect(() => {
    document.title = `You have clicked ${count} times`
    window.addEventListener('mousemove', handleMouseMove);

    return () => {
      window.removeEventListener('mousemove', handleMouseMove); // remove listener
    }
  }, []); // empty arr - to invoke useEffect twice -> on didMount / willUnMount
  }, [someProp]); // to invoke also whenever someProp is changed 



# export default function Login() {} // imideatly export - can't do with arrow function component



#3 useRef()
get React elements



#4 React.createContext()




#5 useContext()





#6 useReducer()

